<?php
/**
 * Campaign
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  ElasticEmail\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Elastic Email REST API
 *
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    To start using this API, you will need your Access Token (available <a href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a href=\"https://api.elasticemail.com/public/help\">here</a>.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace ElasticEmail\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Campaign model.
 *
 * @package ElasticEmail\Model
 * @author  OpenAPI Generator team
 */
class Campaign 
{
        /**
     * Campaign&#39;s email content. Provide multiple items to send an A/X Split Campaign
     *
     * @var ElasticEmail\Model\CampaignTemplate[]|null
     * @SerializedName("Content")
     * @Assert\All({
     *   @Assert\Type("ElasticEmail\Model\CampaignTemplate")
     * })
     * @Type("array<ElasticEmail\Model\CampaignTemplate>")
     */
    protected $content;

    /**
     * Campaign name
     *
     * @var string|null
     * @SerializedName("Name")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $name;

    /**
     * Campaign status
     *
     * @var CampaignStatus|null
     * @SerializedName("Status")
     * @Assert\Type("CampaignStatus")
     * @Type("CampaignStatus")
     */
    protected $status;

    /**
     * Recipients this campaign should be sent to
     *
     * @var CampaignRecipient|null
     * @SerializedName("Recipients")
     * @Assert\Type("CampaignRecipient")
     * @Type("CampaignRecipient")
     */
    protected $recipients;

    /**
     * Campaign sending options
     *
     * @var CampaignOptions|null
     * @SerializedName("Options")
     * @Assert\Type("CampaignOptions")
     * @Type("CampaignOptions")
     */
    protected $options;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->content = isset($data['content']) ? $data['content'] : null;
        $this->name = isset($data['name']) ? $data['name'] : null;
        $this->status = isset($data['status']) ? $data['status'] : null;
        $this->recipients = isset($data['recipients']) ? $data['recipients'] : null;
        $this->options = isset($data['options']) ? $data['options'] : null;
    }

    /**
     * Gets content.
     *
     * @return ElasticEmail\Model\CampaignTemplate[]|null
     */
    public function getContent(): ?array
    {
        return $this->content;
    }

    /**
     * Sets content.
     *
     * @param ElasticEmail\Model\CampaignTemplate[]|null $content  Campaign's email content. Provide multiple items to send an A/X Split Campaign
     *
     * @return $this
     */
    public function setContent(array $content = null)
    {
        $this->content = $content;

        return $this;
    }

    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Sets name.
     *
     * @param string|null $name  Campaign name
     *
     * @return $this
     */
    public function setName($name = null)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Gets status.
     *
     * @return CampaignStatus|null
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * Sets status.
     *
     * @param CampaignStatus|null $status  Campaign status
     *
     * @return $this
     */
    public function setStatus($status = null)
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Gets recipients.
     *
     * @return CampaignRecipient|null
     */
    public function getRecipients()
    {
        return $this->recipients;
    }

    /**
     * Sets recipients.
     *
     * @param CampaignRecipient|null $recipients  Recipients this campaign should be sent to
     *
     * @return $this
     */
    public function setRecipients($recipients = null)
    {
        $this->recipients = $recipients;

        return $this;
    }

    /**
     * Gets options.
     *
     * @return CampaignOptions|null
     */
    public function getOptions()
    {
        return $this->options;
    }

    /**
     * Sets options.
     *
     * @param CampaignOptions|null $options  Campaign sending options
     *
     * @return $this
     */
    public function setOptions($options = null)
    {
        $this->options = $options;

        return $this;
    }
}


