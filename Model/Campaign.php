<?php
/**
 * Campaign
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  ElasticEmail\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Elastic Email REST API
 *
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace ElasticEmail\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Campaign model.
 *
 * @package ElasticEmail\Model
 * @author  OpenAPI Generator team
 */
class Campaign 
{
        /**
     * Campaign&#39;s email content. Provide multiple items to send an A/X Split Campaign
     *
     * @var ElasticEmail\Model\CampaignTemplate[]|null
     * @SerializedName("Content")
     * @Assert\All({
     *   @Assert\Type("ElasticEmail\Model\CampaignTemplate")
     * })
     * @Type("array<ElasticEmail\Model\CampaignTemplate>")
     */
    protected $content;

    /**
     * Campaign name
     *
     * @var string
     * @SerializedName("Name")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $name;

    /**
     * @var ElasticEmail\Model\CampaignStatus|null
     * @SerializedName("Status")
     * @Assert\Type("ElasticEmail\Model\CampaignStatus")
     * @Type("ElasticEmail\Model\CampaignStatus")
     */
    protected $status;

    /**
     * @var ElasticEmail\Model\CampaignRecipient
     * @SerializedName("Recipients")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("ElasticEmail\Model\CampaignRecipient")
     * @Type("ElasticEmail\Model\CampaignRecipient")
     */
    protected $recipients;

    /**
     * @var ElasticEmail\Model\CampaignOptions|null
     * @SerializedName("Options")
     * @Assert\Type("ElasticEmail\Model\CampaignOptions")
     * @Type("ElasticEmail\Model\CampaignOptions")
     */
    protected $options;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->content = isset($data['content']) ? $data['content'] : null;
        $this->name = isset($data['name']) ? $data['name'] : null;
        $this->status = isset($data['status']) ? $data['status'] : null;
        $this->recipients = isset($data['recipients']) ? $data['recipients'] : null;
        $this->options = isset($data['options']) ? $data['options'] : null;
    }

    /**
     * Gets content.
     *
     * @return ElasticEmail\Model\CampaignTemplate[]|null
     */
    public function getContent(): ?array
    {
        return $this->content;
    }

    /**
     * Sets content.
     *
     * @param ElasticEmail\Model\CampaignTemplate[]|null $content  Campaign's email content. Provide multiple items to send an A/X Split Campaign
     *
     * @return $this
     */
    public function setContent(array $content = null)
    {
        $this->content = $content;

        return $this;
    }

    /**
     * Gets name.
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Sets name.
     *
     * @param string $name  Campaign name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Gets status.
     *
     * @return ElasticEmail\Model\CampaignStatus|null
     */
    public function getStatus(): ?CampaignStatus
    {
        return $this->status;
    }

    /**
     * Sets status.
     *
     * @param ElasticEmail\Model\CampaignStatus|null $status
     *
     * @return $this
     */
    public function setStatus(CampaignStatus $status = null)
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Gets recipients.
     *
     * @return ElasticEmail\Model\CampaignRecipient
     */
    public function getRecipients(): CampaignRecipient
    {
        return $this->recipients;
    }

    /**
     * Sets recipients.
     *
     * @param ElasticEmail\Model\CampaignRecipient $recipients
     *
     * @return $this
     */
    public function setRecipients(CampaignRecipient $recipients)
    {
        $this->recipients = $recipients;

        return $this;
    }

    /**
     * Gets options.
     *
     * @return ElasticEmail\Model\CampaignOptions|null
     */
    public function getOptions(): ?CampaignOptions
    {
        return $this->options;
    }

    /**
     * Sets options.
     *
     * @param ElasticEmail\Model\CampaignOptions|null $options
     *
     * @return $this
     */
    public function setOptions(CampaignOptions $options = null)
    {
        $this->options = $options;

        return $this;
    }
}


