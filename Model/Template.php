<?php
/**
 * Template
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  ElasticEmail\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Elastic Email REST API
 *
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a target=\"_blank\" href=\"https://api.elasticemail.com/public/help\">here</a>.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace ElasticEmail\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Template model.
 *
 * Template info
 *
 * @package ElasticEmail\Model
 * @author  OpenAPI Generator team
 */
class Template 
{
        /**
     * @var ElasticEmail\Model\TemplateType|null
     * @SerializedName("TemplateType")
     * @Assert\Type("ElasticEmail\Model\TemplateType")
     * @Type("ElasticEmail\Model\TemplateType")
     */
    protected $templateType;

    /**
     * Template name
     *
     * @var string|null
     * @SerializedName("Name")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $name;

    /**
     * Date of creation in YYYY-MM-DDThh:ii:ss format
     *
     * @var \DateTime|null
     * @SerializedName("DateAdded")
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected $dateAdded;

    /**
     * Default subject of email.
     *
     * @var string|null
     * @SerializedName("Subject")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $subject;

    /**
     * Email content of this template
     *
     * @var ElasticEmail\Model\BodyPart[]|null
     * @SerializedName("Body")
     * @Assert\All({
     *   @Assert\Type("ElasticEmail\Model\BodyPart")
     * })
     * @Type("array<ElasticEmail\Model\BodyPart>")
     */
    protected $body;

    /**
     * @var ElasticEmail\Model\TemplateScope|null
     * @SerializedName("TemplateScope")
     * @Assert\Type("ElasticEmail\Model\TemplateScope")
     * @Type("ElasticEmail\Model\TemplateScope")
     */
    protected $templateScope;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->templateType = isset($data['templateType']) ? $data['templateType'] : null;
        $this->name = isset($data['name']) ? $data['name'] : null;
        $this->dateAdded = isset($data['dateAdded']) ? $data['dateAdded'] : null;
        $this->subject = isset($data['subject']) ? $data['subject'] : null;
        $this->body = isset($data['body']) ? $data['body'] : null;
        $this->templateScope = isset($data['templateScope']) ? $data['templateScope'] : null;
    }

    /**
     * Gets templateType.
     *
     * @return ElasticEmail\Model\TemplateType|null
     */
    public function getTemplateType(): ?TemplateType
    {
        return $this->templateType;
    }

    /**
     * Sets templateType.
     *
     * @param ElasticEmail\Model\TemplateType|null $templateType
     *
     * @return $this
     */
    public function setTemplateType(TemplateType $templateType = null)
    {
        $this->templateType = $templateType;

        return $this;
    }

    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Sets name.
     *
     * @param string|null $name  Template name
     *
     * @return $this
     */
    public function setName($name = null)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Gets dateAdded.
     *
     * @return \DateTime|null
     */
    public function getDateAdded(): ?\DateTime
    {
        return $this->dateAdded;
    }

    /**
     * Sets dateAdded.
     *
     * @param \DateTime|null $dateAdded  Date of creation in YYYY-MM-DDThh:ii:ss format
     *
     * @return $this
     */
    public function setDateAdded(\DateTime $dateAdded = null)
    {
        $this->dateAdded = $dateAdded;

        return $this;
    }

    /**
     * Gets subject.
     *
     * @return string|null
     */
    public function getSubject()
    {
        return $this->subject;
    }

    /**
     * Sets subject.
     *
     * @param string|null $subject  Default subject of email.
     *
     * @return $this
     */
    public function setSubject($subject = null)
    {
        $this->subject = $subject;

        return $this;
    }

    /**
     * Gets body.
     *
     * @return ElasticEmail\Model\BodyPart[]|null
     */
    public function getBody(): ?array
    {
        return $this->body;
    }

    /**
     * Sets body.
     *
     * @param ElasticEmail\Model\BodyPart[]|null $body  Email content of this template
     *
     * @return $this
     */
    public function setBody(array $body = null)
    {
        $this->body = $body;

        return $this;
    }

    /**
     * Gets templateScope.
     *
     * @return ElasticEmail\Model\TemplateScope|null
     */
    public function getTemplateScope(): ?TemplateScope
    {
        return $this->templateScope;
    }

    /**
     * Sets templateScope.
     *
     * @param ElasticEmail\Model\TemplateScope|null $templateScope
     *
     * @return $this
     */
    public function setTemplateScope(TemplateScope $templateScope = null)
    {
        $this->templateScope = $templateScope;

        return $this;
    }
}


