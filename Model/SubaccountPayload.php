<?php
/**
 * SubaccountPayload
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  ElasticEmail\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Elastic Email REST API
 *
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a target=\"_blank\" href=\"https://api.elasticemail.com/public/help\">here</a>.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace ElasticEmail\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the SubaccountPayload model.
 *
 * New SubAccount payload
 *
 * @package ElasticEmail\Model
 * @author  OpenAPI Generator team
 */
class SubaccountPayload 
{
        /**
     * Proper email address.
     *
     * @var string
     * @SerializedName("Email")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $email;

    /**
     * Current password.
     *
     * @var string
     * @SerializedName("Password")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $password;

    /**
     * True, if you want to send activation email to this Account to confirm the creation of a new SubAccount. Otherwise, false (SubAccount will immediately be Active).
     *
     * @var bool|null
     * @SerializedName("SendActivation")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $sendActivation;

    /**
     * @var ElasticEmail\Model\SubaccountSettingsInfoPayload|null
     * @SerializedName("Settings")
     * @Assert\Type("ElasticEmail\Model\SubaccountSettingsInfoPayload")
     * @Type("ElasticEmail\Model\SubaccountSettingsInfoPayload")
     */
    protected $settings;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->email = isset($data['email']) ? $data['email'] : null;
        $this->password = isset($data['password']) ? $data['password'] : null;
        $this->sendActivation = isset($data['sendActivation']) ? $data['sendActivation'] : null;
        $this->settings = isset($data['settings']) ? $data['settings'] : null;
    }

    /**
     * Gets email.
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Sets email.
     *
     * @param string $email  Proper email address.
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->email = $email;

        return $this;
    }

    /**
     * Gets password.
     *
     * @return string
     */
    public function getPassword()
    {
        return $this->password;
    }

    /**
     * Sets password.
     *
     * @param string $password  Current password.
     *
     * @return $this
     */
    public function setPassword($password)
    {
        $this->password = $password;

        return $this;
    }

    /**
     * Gets sendActivation.
     *
     * @return bool|null
     */
    public function isSendActivation()
    {
        return $this->sendActivation;
    }

    /**
     * Sets sendActivation.
     *
     * @param bool|null $sendActivation  True, if you want to send activation email to this Account to confirm the creation of a new SubAccount. Otherwise, false (SubAccount will immediately be Active).
     *
     * @return $this
     */
    public function setSendActivation($sendActivation = null)
    {
        $this->sendActivation = $sendActivation;

        return $this;
    }

    /**
     * Gets settings.
     *
     * @return ElasticEmail\Model\SubaccountSettingsInfoPayload|null
     */
    public function getSettings(): ?SubaccountSettingsInfoPayload
    {
        return $this->settings;
    }

    /**
     * Sets settings.
     *
     * @param ElasticEmail\Model\SubaccountSettingsInfoPayload|null $settings
     *
     * @return $this
     */
    public function setSettings(SubaccountSettingsInfoPayload $settings = null)
    {
        $this->settings = $settings;

        return $this;
    }
}


