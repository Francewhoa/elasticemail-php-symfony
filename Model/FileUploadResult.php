<?php
/**
 * FileUploadResult
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  ElasticEmail\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Elastic Email REST API
 *
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a target=\"_blank\" href=\"https://api.elasticemail.com/public/help\">here</a>.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace ElasticEmail\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the FileUploadResult model.
 *
 * @package ElasticEmail\Model
 * @author  OpenAPI Generator team
 */
class FileUploadResult 
{
        /**
     * How many unique emails were detected the file
     *
     * @var int|null
     * @SerializedName("EmailsCount")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $emailsCount;

    /**
     * How many email duplicates were detected
     *
     * @var int|null
     * @SerializedName("DuplicatedEmailsCount")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $duplicatedEmailsCount;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->emailsCount = isset($data['emailsCount']) ? $data['emailsCount'] : null;
        $this->duplicatedEmailsCount = isset($data['duplicatedEmailsCount']) ? $data['duplicatedEmailsCount'] : null;
    }

    /**
     * Gets emailsCount.
     *
     * @return int|null
     */
    public function getEmailsCount()
    {
        return $this->emailsCount;
    }

    /**
     * Sets emailsCount.
     *
     * @param int|null $emailsCount  How many unique emails were detected the file
     *
     * @return $this
     */
    public function setEmailsCount($emailsCount = null)
    {
        $this->emailsCount = $emailsCount;

        return $this;
    }

    /**
     * Gets duplicatedEmailsCount.
     *
     * @return int|null
     */
    public function getDuplicatedEmailsCount()
    {
        return $this->duplicatedEmailsCount;
    }

    /**
     * Sets duplicatedEmailsCount.
     *
     * @param int|null $duplicatedEmailsCount  How many email duplicates were detected
     *
     * @return $this
     */
    public function setDuplicatedEmailsCount($duplicatedEmailsCount = null)
    {
        $this->duplicatedEmailsCount = $duplicatedEmailsCount;

        return $this;
    }
}


