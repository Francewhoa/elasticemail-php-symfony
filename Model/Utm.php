<?php
/**
 * Utm
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  ElasticEmail\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Elastic Email REST API
 *
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace ElasticEmail\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Utm model.
 *
 * Utm marketing data to be attached to every link in this e-mail.
 *
 * @package ElasticEmail\Model
 * @author  OpenAPI Generator team
 */
class Utm 
{
        /**
     * utmsource value
     *
     * @var string|null
     * @SerializedName("Source")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $source;

    /**
     * utmmedium value
     *
     * @var string|null
     * @SerializedName("Medium")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $medium;

    /**
     * utmcampaign value
     *
     * @var string|null
     * @SerializedName("Campaign")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $campaign;

    /**
     * utmcontent value
     *
     * @var string|null
     * @SerializedName("Content")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $content;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->source = isset($data['source']) ? $data['source'] : null;
        $this->medium = isset($data['medium']) ? $data['medium'] : null;
        $this->campaign = isset($data['campaign']) ? $data['campaign'] : null;
        $this->content = isset($data['content']) ? $data['content'] : null;
    }

    /**
     * Gets source.
     *
     * @return string|null
     */
    public function getSource()
    {
        return $this->source;
    }

    /**
     * Sets source.
     *
     * @param string|null $source  utmsource value
     *
     * @return $this
     */
    public function setSource($source = null)
    {
        $this->source = $source;

        return $this;
    }

    /**
     * Gets medium.
     *
     * @return string|null
     */
    public function getMedium()
    {
        return $this->medium;
    }

    /**
     * Sets medium.
     *
     * @param string|null $medium  utmmedium value
     *
     * @return $this
     */
    public function setMedium($medium = null)
    {
        $this->medium = $medium;

        return $this;
    }

    /**
     * Gets campaign.
     *
     * @return string|null
     */
    public function getCampaign()
    {
        return $this->campaign;
    }

    /**
     * Sets campaign.
     *
     * @param string|null $campaign  utmcampaign value
     *
     * @return $this
     */
    public function setCampaign($campaign = null)
    {
        $this->campaign = $campaign;

        return $this;
    }

    /**
     * Gets content.
     *
     * @return string|null
     */
    public function getContent()
    {
        return $this->content;
    }

    /**
     * Sets content.
     *
     * @param string|null $content  utmcontent value
     *
     * @return $this
     */
    public function setContent($content = null)
    {
        $this->content = $content;

        return $this;
    }
}


