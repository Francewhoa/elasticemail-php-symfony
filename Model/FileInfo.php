<?php
/**
 * FileInfo
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  ElasticEmail\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Elastic Email REST API
 *
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace ElasticEmail\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the FileInfo model.
 *
 * File information
 *
 * @package ElasticEmail\Model
 * @author  OpenAPI Generator team
 */
class FileInfo 
{
        /**
     * Name of your file including extension.
     *
     * @var string|null
     * @SerializedName("FileName")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $fileName;

    /**
     * Size of your attachment (in bytes).
     *
     * @var int|null
     * @SerializedName("Size")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $size;

    /**
     * Date of creation in YYYY-MM-DDThh:ii:ss format
     *
     * @var \DateTime|null
     * @SerializedName("DateAdded")
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected $dateAdded;

    /**
     * Date when the file will be deleted from your Account.
     *
     * @var \DateTime|null
     * @SerializedName("ExpirationDate")
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected $expirationDate;

    /**
     * Content type of the file.
     *
     * @var string|null
     * @SerializedName("ContentType")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $contentType;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->fileName = isset($data['fileName']) ? $data['fileName'] : null;
        $this->size = isset($data['size']) ? $data['size'] : null;
        $this->dateAdded = isset($data['dateAdded']) ? $data['dateAdded'] : null;
        $this->expirationDate = isset($data['expirationDate']) ? $data['expirationDate'] : null;
        $this->contentType = isset($data['contentType']) ? $data['contentType'] : null;
    }

    /**
     * Gets fileName.
     *
     * @return string|null
     */
    public function getFileName()
    {
        return $this->fileName;
    }

    /**
     * Sets fileName.
     *
     * @param string|null $fileName  Name of your file including extension.
     *
     * @return $this
     */
    public function setFileName($fileName = null)
    {
        $this->fileName = $fileName;

        return $this;
    }

    /**
     * Gets size.
     *
     * @return int|null
     */
    public function getSize()
    {
        return $this->size;
    }

    /**
     * Sets size.
     *
     * @param int|null $size  Size of your attachment (in bytes).
     *
     * @return $this
     */
    public function setSize($size = null)
    {
        $this->size = $size;

        return $this;
    }

    /**
     * Gets dateAdded.
     *
     * @return \DateTime|null
     */
    public function getDateAdded(): ?\DateTime
    {
        return $this->dateAdded;
    }

    /**
     * Sets dateAdded.
     *
     * @param \DateTime|null $dateAdded  Date of creation in YYYY-MM-DDThh:ii:ss format
     *
     * @return $this
     */
    public function setDateAdded(\DateTime $dateAdded = null)
    {
        $this->dateAdded = $dateAdded;

        return $this;
    }

    /**
     * Gets expirationDate.
     *
     * @return \DateTime|null
     */
    public function getExpirationDate(): ?\DateTime
    {
        return $this->expirationDate;
    }

    /**
     * Sets expirationDate.
     *
     * @param \DateTime|null $expirationDate  Date when the file will be deleted from your Account.
     *
     * @return $this
     */
    public function setExpirationDate(\DateTime $expirationDate = null)
    {
        $this->expirationDate = $expirationDate;

        return $this;
    }

    /**
     * Gets contentType.
     *
     * @return string|null
     */
    public function getContentType()
    {
        return $this->contentType;
    }

    /**
     * Sets contentType.
     *
     * @param string|null $contentType  Content type of the file.
     *
     * @return $this
     */
    public function setContentType($contentType = null)
    {
        $this->contentType = $contentType;

        return $this;
    }
}


