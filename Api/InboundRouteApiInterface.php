<?php
/**
 * InboundRouteApiInterface
 * PHP version 7.1.3
 *
 * @category Class
 * @package  ElasticEmail
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Elastic Email REST API
 *
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a target=\"_blank\" href=\"https://api.elasticemail.com/public/help\">here</a>.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace ElasticEmail\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use ElasticEmail\Model\InboundPayload;
use ElasticEmail\Model\InboundRoute;
use ElasticEmail\Model\SortOrderItem;

/**
 * InboundRouteApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  ElasticEmail\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface InboundRouteApiInterface
{

    /**
     * Sets authentication method apikey
     *
     * @param string $value Value of the apikey authentication method.
     *
     * @return void
     */
    public function setapikey($value);

    /**
     * Operation inboundrouteByIdDelete
     *
     * Delete Route
     *
     * @param  string $id   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function inboundrouteByIdDelete($id, &$responseCode, array &$responseHeaders);

    /**
     * Operation inboundrouteByIdGet
     *
     * Get Route
     *
     * @param  string $id  ID number of your attachment (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return ElasticEmail\Model\InboundRoute
     *
     */
    public function inboundrouteByIdGet($id, &$responseCode, array &$responseHeaders);

    /**
     * Operation inboundrouteByIdPut
     *
     * Update Route
     *
     * @param  string $id   (required)
     * @param  ElasticEmail\Model\InboundPayload $inboundPayload   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return ElasticEmail\Model\InboundRoute
     *
     */
    public function inboundrouteByIdPut($id, InboundPayload $inboundPayload, &$responseCode, array &$responseHeaders);

    /**
     * Operation inboundrouteGet
     *
     * Get Routes
     *
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return ElasticEmail\Model\InboundRoute[]
     *
     */
    public function inboundrouteGet(&$responseCode, array &$responseHeaders);

    /**
     * Operation inboundrouteOrderPut
     *
     * Update Sorting
     *
     * @param  ElasticEmail\Model\SortOrderItem[] $sortOrderItem  Change the ordering of inbound routes for when matching the inbound (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return ElasticEmail\Model\InboundRoute[]
     *
     */
    public function inboundrouteOrderPut(array $sortOrderItem, &$responseCode, array &$responseHeaders);

    /**
     * Operation inboundroutePost
     *
     * Create Route
     *
     * @param  ElasticEmail\Model\InboundPayload $inboundPayload   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return ElasticEmail\Model\InboundRoute
     *
     */
    public function inboundroutePost(InboundPayload $inboundPayload, &$responseCode, array &$responseHeaders);
}
